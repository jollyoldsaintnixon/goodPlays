30 JUL: User is being returned from DB as an empty object when tyring to dispatch the Thunk Action Creator login
  solution: extra comma at end of json.extract! in _user partial. Followed this rabbit down every hole it would jump in until
  finally a second pair of eyes caught it (brandon)

31 JUL: Renamed a file from .js to .jsx, and the app would no longer compile.  Tried redo-ing all instances where the renamed file
  was imported, but to no avail.  Restarted the server, nothing.  Brandon recommended restarting webpack, and thus the bug was squashed

31 JUL: Could not figure out how to properly push history within a component.  Brandon explained that my TAC still returned 
  promises and therefore we could tack on another .then IOT conditionally render a different layout

01 AUG: Placed a link to a game show component, and placed a corresponding router in the game index component.  No change upon click.
  After lots of debugging and switching locations of the Route, Brandon noticed that there was no / in front of the Route's path.  Dang.

06 AUG: Had trouble with the search function working properly when coming from any page that was not the game index.  Refactored the ui games 
  reducer to only deal with the game ids, vs the entire games.  For some reason, this worked.  Take away is that JS is crazy, but normalized 
  state can help mitigate that craziness.

26 AUG: Could not figure out why I was receiving an error in the console about a action requiring a type.  The error
  pointed to a line of code that dispatched a thunk action, which then dispatched a regular action which absolutely had 
  a type defined.  Finally realized that I left off a portion of the currying aspect of the thunk action;
  I never passed it through to receive a dispatch.

28 AUG: Gulp wouldn't update with my sass changes on my portfolio site.  It was not outputting to the destination file.  
  Downloaded the Gulp CLI, input 'gulp style', and then re-initiated 'gulp watch'.  It's worked since.

29 AUG: A backend partial was not being found when requested from an index view.  I used the exact same syntax as with other views but 
  this is the only one that didnt work.  Was simple to work around, but remains at large.

01 SEP: Really odd bug, wherein a const call comments is read as an array when pulled from props, and passes an if statement based on length,
  but then an error is thrown because 'forEach' is not a method that can be called on comments.  In the Chrome , I confirmed it is an array
  of 12 objects, but its typeof was 'object' not array.  I manually input a forEach within the console on comments, and it worked just fine.
  Solution: Arrays are always an object in the console, so that was a red herring.  Turns out, the issue lay with there being two adjacent ternaries.
  I added a semicolon between the two and everything worked fine.
  